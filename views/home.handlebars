<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestor de Productos</title>
    <link rel="stylesheet" href="styles.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h2, h3 {
            color: #333;
        }

        form {
            background: #fff;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            width: 100%;
        }

        form h3 {
            margin-top: 0;
        }

        input[type="text"], input[type="number"] {
            width: calc(100% - 20px);
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        button[type="submit"] {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        button[type="submit"]:hover {
            background-color: #0056b3;
        }

        ul {
            list-style-type: none;
            padding: 0;
            max-width: 600px;
            width: 100%;
        }

        li {
            background: #fff;
            margin: 10px 0;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        li form {
            margin: 0;
        }

        button.delete {
            background-color: #dc3545;
            color: #fff;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        button.delete:hover {
            background-color: #c82333;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        #notification {
            background-color: #28a745;
            color: #fff;
            padding: 10px;
            border-radius: 5px;
            position: fixed;
            top: 20px;
            right: 20px;
            display: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            animation: fadeIn 0.5s;
        }
    </style>
</head>
<body>
    <h2>Lista de Productos</h2>

    <form id="productForm">
        <h3>Agregar Producto</h3>
        <input type="text" name="title" placeholder="Título" required><br>
        <input type="text" name="description" placeholder="Descripción" ><br>
        <input type="text" name="code" placeholder="Código" ><br>
        <input type="number" name="price" placeholder="Precio" required><br>
        <input type="number" name="stock" placeholder="Stock" required><br>
        <input type="text" name="category" placeholder="Categoría" ><br>
        <input type="text" name="thumbnails" placeholder="URL de imagen" ><br>
        <button type="submit">Agregar Producto</button>
    </form>

    <h3>Productos:</h3>
    <ul id="productList">
        {{#each products}}
            <li data-id="{{this.id}}">
                <span><strong>{{this.title}}</strong> - ${{this.price}}</span>
                <button class="delete">Eliminar</button>
            </li>
        {{/each}}
    </ul>
    <div id="notification">Producto agregado con éxito!</div>

    <script>
        document.getElementById('productForm').addEventListener('submit', function(event) {
            event.preventDefault();

            const formData = new FormData(event.target);
            const productData = Object.fromEntries(formData.entries());

            fetch('/api/products', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(productData)
            })
            .then(response => response.json())
            .then(data => {
                if (data && data.id) {
                    showNotification();
                    const productList = document.getElementById('productList');
                    const newProduct = document.createElement('li');
                    newProduct.setAttribute('data-id', data.id);
                    newProduct.innerHTML = `<span><strong>${data.title}</strong> - $${data.price}</span><button class="delete">Eliminar</button>`;
                    productList.appendChild(newProduct);
                    event.target.reset();
                } else {
                    console.error('Error al agregar el producto');
                }
            })
            .catch(error => {
                console.error('Error en la solicitud:', error);
            });
        });

        document.getElementById('productList').addEventListener('click', function(event) {
            if (event.target.classList.contains('delete')) {
                const productItem = event.target.closest('li');
                const productId = productItem.getAttribute('data-id');

                fetch(`/api/products/${productId}`, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (response.ok) {
                        productItem.remove();
                    } else {
                        console.error('Error al eliminar el producto');
                    }
                })
                .catch(error => {
                    console.error('Error en la solicitud:', error);
                });
            }
        });

        function showNotification() {
            const notification = document.getElementById('notification');
            notification.style.display = 'block';
            setTimeout(() => {
                notification.style.display = 'none';
            }, 3000);
        }
    </script>
</body>
</html>
